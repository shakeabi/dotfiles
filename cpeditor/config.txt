[General]
answer_file_save_path=./tests/${basename}_${1-index}.ans
ask_for_loading_external_changes=true
auto_complete_parentheses=true
auto_indent=true
auto_load_external_changes_if_no_unsaved_modification=true
auto_remove_parentheses=true
auto_save=false
auto_save_interval=1000
auto_save_interval_type=After the last modification
beta=false
check_on_testcases_with_empty_output=true
check_update=false
custom_application_font=@Variant(\0\0\0@\0\0\0\x14\0S\0\x61\0n\0s\0 \0S\0\x65\0r\0i\0\x66@\"\0\0\0\0\0\0\xff\xff\xff\xff\x5\x1\0\x32\x10)
default_file_paths_for_problem_urls=@Variant(\0\0\0\v\0\0\0\x2\0\0\0~\0h\0t\0t\0p\0s\0:\0/\0/\0\x63\0o\0\x64\0\x65\0\x66\0o\0r\0\x63\0\x65\0s\0.\0\x63\0o\0m\0/\0\x63\0o\0n\0t\0\x65\0s\0t\0/\0(\0[\0\x31\0-\0\x39\0]\0\\\0\x64\0*\0)\0/\0p\0r\0o\0\x62\0l\0\x65\0m\0/\0(\0[\0\x41\0-\0Z\0]\0[\0\x31\0-\0\x39\0]\0?\0)\0\0\0N\0/\0h\0o\0m\0\x65\0/\0s\0h\0\x61\0k\0\x65\0/\0\x64\0\x65\0l\0t\0\x61\0/\0\x63\0p\0/\0\x63\0o\0\x64\0\x65\0\x66\0o\0r\0\x63\0\x65\0s\0/\0\\\0\x31\0/\0\\\0\x31\0\\\0\x32), @Variant(\0\0\0\v\0\0\0\x2\0\0\0\x84\0h\0t\0t\0p\0s\0:\0/\0/\0\x63\0o\0\x64\0\x65\0\x66\0o\0r\0\x63\0\x65\0s\0.\0\x63\0o\0m\0/\0p\0r\0o\0\x62\0l\0\x65\0m\0s\0\x65\0t\0/\0p\0r\0o\0\x62\0l\0\x65\0m\0/\0(\0[\0\x31\0-\0\x39\0]\0\\\0\x64\0*\0)\0/\0(\0[\0\x41\0-\0Z\0]\0[\0\x31\0-\0\x39\0]\0?\0)\0\0\0N\0/\0h\0o\0m\0\x65\0/\0s\0h\0\x61\0k\0\x65\0/\0\x64\0\x65\0l\0t\0\x61\0/\0\x63\0p\0/\0\x63\0o\0\x64\0\x65\0\x66\0o\0r\0\x63\0\x65\0s\0/\0\\\0\x31\0/\0\\\0\x31\0\\\0\x32)
default_language=C++
display_eoln_in_diff=false
editor_font=@Variant(\0\0\0@\0\0\0\x1e\0S\0o\0u\0r\0\x63\0\x65\0 \0\x43\0o\0\x64\0\x65\0 \0P\0r\0o@(\0\0\0\0\0\0\xff\xff\xff\xff\x5\x1\0\x32\x10)
editor_theme=Monokai
extra_bottom_margin=true
file_problem_binding=@Invalid()
force_close=false
geometry=@Rect(0 0 1920 1056)
html_diff_viewer_length_limit=50000
input_file_save_path=./tests/${basename}_${1-index}.in
load_test_case_length_limit=500000
locale=system
maximized_window=false
message_length_limit=20000
message_logger_font=@Variant(\0\0\0@\0\0\0\x12\0m\0o\0n\0o\0s\0p\0\x61\0\x63\0\x65@(\0\0\0\0\0\0\xff\xff\xff\xff\x5\x1\0\x32\x10)
opacity=100
open_file_length_limit=20000
open_old_file_for_old_problem_url=true
output_display_length_limit=50000
output_length_limit=500000
replace_tabs=true
restore_old_problem_url=true
right_splitter_size=@ByteArray()
run_on_empty_testcase=false
save_faster=false
save_file_on_compilation=true
save_file_on_execution=false
save_tests=true
show_compile_and_run_only=false
splitter_size=@ByteArray()
tab_jump_out_parentheses=true
tab_width=2
test_case_maximum_height=300
test_cases_font=@Variant(\0\0\0@\0\0\0\x1e\0S\0o\0u\0r\0\x63\0\x65\0 \0\x43\0o\0\x64\0\x65\0 \0P\0r\0o@(\0\0\0\0\0\0\xff\xff\xff\xff\x5\x1\0\x32\x10)
testcases_matching_rules=@Variant(\0\0\0\v\0\0\0\x2\0\0\0\x10\0(\0.\0*\0)\0\\\0.\0i\0n\0\0\0\f\0\\\0\x31\0.\0\x61\0n\0s), @Variant(\0\0\0\v\0\0\0\x2\0\0\0\x10\0(\0.\0*\0)\0\\\0.\0i\0n\0\0\0\f\0\\\0\x31\0.\0o\0u\0t)
time_limit=5000
ui_style=Dark Fusion
use_custom_application_font=false
view_mode=split
wrap_text=true

[cf]
path=cf
show_toast_messages=true

[clang_format]
format_on_auto_save=false
format_on_manual_save=false
path=clang-format
style=BasedOnStyle: Google

[competitive_companion]
connection_port=10045
enable=true
open_new_tab=true

[cpp]
compile_command=g++ -Wall -DSHAKE
compiler_output_codec=UTF-8
output_path=${tmpdir}/${basename}
parentheses=@Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0(\0\0\0\a\0)\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0{\0\0\0\a\0}\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0[\0\0\0\a\0]\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0\"\0\0\0\a\0\"\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0'\0\0\0\a\0'\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1)
run_arguments=
template_cursor_position_offset_characters=4
template_cursor_position_offset_type=end
template_cursor_position_regex=solve\\(\\)
template_path=/home/shake/delta/cp/template.cpp

[default_path]
action\add_pairs_of_test_cases\changes=testcase
action\add_pairs_of_test_cases\uses=${testcase}
action\custom_checker\changes=checker
action\custom_checker\uses=${checker}
action\export_and_import_settings\changes=settings
action\export_and_import_settings\uses=${settings}
action\export_and_load_session\changes=session
action\export_and_load_session\uses=${session}
action\extract_and_load_snippets\changes=snippets
action\extract_and_load_snippets\uses=${snippets}
action\load_single_test_case\changes=testcase
action\load_single_test_case\uses=${testcase}
action\open_contest\changes="contest, file, testcase, checker"
action\open_contest\uses=${contest}
action\open_file\changes="file, testcase, checker"
action\open_file\uses=${file}
action\save_file\changes="file, testcase, checker"
action\save_file\uses=${file}
names_and_paths=@Variant(\0\0\0\t\0\0\0\x1\0\0\0\v\0\0\0\x2\0\0\0\b\0\x66\0i\0l\0\x65\0\0\0T\0/\0h\0o\0m\0\x65\0/\0s\0h\0\x61\0k\0\x65\0/\0\x64\0\x65\0l\0t\0\x61\0/\0\x63\0p\0/\0\x63\0o\0\x64\0\x65\0\x63\0h\0\x65\0\x66\0/\0j\0u\0l\0\x32\0\x30\0\x32\0\x30\0_\0l\0o\0n\0g)

[hot_exit]
auto_save=false
auto_save_interval=20000
enable=true

[hotkey]
change_view_mode=
compile=
compile_run=F12
format=
kill=
run=
snippets=

[java]
class_name=a
compile_command=javac
compiler_output_codec=UTF-8
output_path=${tmpdir}
parentheses=@Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0(\0\0\0\a\0)\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0{\0\0\0\a\0}\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0[\0\0\0\a\0]\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0\"\0\0\0\a\0\"\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\a\0'\0\0\0\a\0'\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1)
run_arguments=
run_command=java
template_cursor_position_offset_characters=0
template_cursor_position_offset_type=end
template_cursor_position_regex=
template_path=

[lsp]
args_cpp=
args_java=
args_python=-m pyls
delay_cpp=2000
delay_java=2000
delay_python=2000
path_cpp=clangd
path_java=
path_python=python
use_autocomplete_cpp=false
use_autocomplete_java=false
use_autocomplete_python=false
use_linting_cpp=false
use_linting_java=false
use_linting_python=false

[proxy]
enabled=true
host_name=127.0.0.1
password=
port=1080
type=System
user=

[python]
parentheses=@Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0(\0\0\0\x2\0\0\0)\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0{\0\0\0\x2\0\0\0}\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0[\0\0\0\x2\0\0\0]\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0\"\0\0\0\x2\0\0\0\"\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0'\0\0\0\x2\0\0\0'\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1)
run_arguments=
run_command=python
template_cursor_position_offset_characters=0
template_cursor_position_offset_type=end
template_cursor_position_regex=
template_path=
