#!/bin/zsh

# ARG_OPTIONAL_SINGLE([username],[u],[username of github profile])
# ARG_OPTIONAL_SINGLE([password],[p],[password of github profile])
# ARG_OPTIONAL_SINGLE([repo_name],[],[name of remote repo])
# ARG_OPTIONAL_SINGLE([repo_path],[],[absolute path of local repo])
# ARG_HELP([Git Auto Commit Help])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.8.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate


die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}


begins_with_short_option()
{
	local first_option all_short_options='uph'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_username=
_arg_password=
_arg_repo_name=
_arg_repo_path=


print_help()
{
	printf '%s\n' "Git Auto Commit Help"
	printf 'Usage: %s [-u|--username <arg>] [-p|--password <arg>] [--repo_name <arg>] [--repo_path <arg>] [-h|--help]\n' "$0"
	printf '\t%s\n' "-u, --username: username of github profile (no default)"
	printf '\t%s\n' "-p, --password: password of github profile (no default)"
	printf '\t%s\n' "--repo_name: name of remote repo (no default)"
	printf '\t%s\n' "--repo_path: absolute path of local repo (no default)"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-u|--username)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_username="$2"
				shift
				;;
			--username=*)
				_arg_username="${_key##--username=}"
				;;
			-u*)
				_arg_username="${_key##-u}"
				;;
			-p|--password)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_password="$2"
				shift
				;;
			--password=*)
				_arg_password="${_key##--password=}"
				;;
			-p*)
				_arg_password="${_key##-p}"
				;;
			--repo_name)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_repo_name="$2"
				shift
				;;
			--repo_name=*)
				_arg_repo_name="${_key##--repo_name=}"
				;;
			--repo_path)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_repo_path="$2"
				shift
				;;
			--repo_path=*)
				_arg_repo_path="${_key##--repo_path=}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash


echo `date`
cd $_arg_repo_path && git add . && git commit -m "Daily Commit [`date`]"
git push "https://$_arg_username:$_arg_password@github.com/shakeabi/$_arg_repo_name.git" master
echo "--------------------------------"

# ] <-- needed because of Argbash
